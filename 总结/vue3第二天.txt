1.reactive对比ref：
*从定义数据角度对比：
@（1）ref用来定义基本数据类型
@（2）reactive用来定义对象或数组（复杂数据类型）
*从原理角度对比：
@（1）ref通过Object.defineProperty()的get与set来实现响应式（数据劫持）
@（2）reactive通过使用Proxy来实现响应式（数据劫持），并通过Reflect操作源对象内部的数据
*从使用角度对比：
@（1）ref定义的数据：操作数据需要.value，读取数据时模板中直接读取不需要.value
@(2)reactive定义的数据：操作数据与读取数据：均不需要.value





2.setup的两个注意点
*setup执行的时机：在beforeCreate之前执行一次，this是undefined
*setup的参数：props:值为对象，包含组件外部传递过来，且组件内部声明接收了的属性
context:上下文对象
*attrs:值为对象，包含组件外部传递过来，但没有在props配置中声明的属性，相当于this.$attrs.
*slots:收到的插槽内容，相当于this.$slots
*emit:分发自定义事件的函数，相当于this.$emit